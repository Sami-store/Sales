/**
 * File name: Sales
 * Short description: Valid password and generate numbers using random to read and write to a file
 * @author Samuel Melenciuc
 * details of the revision: none
 */

import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.io.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(System.in);
        System.out.println("""
                Please enter a password that must include:
                Must be at least 4 characters in length
                Include at least one uppercase character
                Include at least one digit"""); //Prompting the user with the requirements

        try {//Using try block to catch any exceptions
            String inputPassword = in.nextLine();
            boolean pwCheck = validatePassword(inputPassword); //Calling password method to return boolean
            System.out.println("Is password valid? " + pwCheck);
            int[] sales = generateSales();
            ArrayList<Integer> list = readNumbers(writeToFile(sales));
            System.out.println();
            System.out.println("Printing array list to console");
            for (int i = 0; i < list.size(); i++) {
                System.out.println(list.get(i)); //printing array list to console
            }
        } catch (Exception e) {
            System.out.println(e.getMessage()); //Display error message
        }
    }

    public static boolean validatePassword(String password) throws Exception { //This method will check if the password is valid
        boolean valid = false;
        boolean length = false;
        boolean upper = false;
        boolean digit = false;
        if (password.length() > 4) {
            length = true; //Assign true if password length is more than 4 characters
        }
        for (int i = 0; i < password.length(); i++) {
            if (Character.isUpperCase(password.charAt(i))) {
                upper = true; //True if password has uppercase
            }
            if (Character.isDigit(password.charAt(i))) {
                digit = true; //True is password has a digit
            }
        }
        if (length && upper && digit) {
            valid = true; //Assign boolean value to true if all requirements are met
        } else {
            throw new Exception("Invalid password"); //Display error message
        }
        return valid;
    }

    public static int[] generateSales() { //This method generates numbers from 5 to 100 into an array
        Random rand = new Random();
        int[] salesArray = new int[10];
        for (int i = 0; i < 10; i++) {
            salesArray[i] = rand.nextInt(5, 100);
        }
        return salesArray;
    }

    public static String writeToFile(int[] array) throws Exception { //This method writes to a text file
        String fileName = "numbers.txt";
        try (PrintWriter out = new PrintWriter(fileName)) {
            for (int i = 0; i < array.length; i++) {
                out.println(array[i]);
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }
        return fileName;
    }

    public static ArrayList<Integer> readNumbers(String fileName) throws Exception { //This method reads from text file
        ArrayList<Integer> numbers = new ArrayList<>();
        File readFile = new File(fileName);
        try (Scanner in = new Scanner(readFile)) {
            while (in.hasNextInt()) {
                numbers.add(in.nextInt()); //Add numbers into array list
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage()); //Display error
        }
        return numbers;
    }
}
/** Output 1
 * Please enter a password that must include:
 * Must be at least 4 characters in length
 * Include at least one uppercase character
 * Include at least one digit
 * Acdncs3
 * Is password valid? true
 * 41
 * 49
 * 70
 * 34
 * 29
 * 67
 * 76
 * 66
 * 38
 * 73
 *
 *
 * Please enter a password that must include:
 * Must be at least 4 characters in length
 * Include at least one uppercase character
 * Include at least one digit
 * Anv
 * Invalid password
 *
 *
 * Please enter a password that must include:
 * Must be at least 4 characters in length
 * Include at least one uppercase character
 * Include at least one digit
 * Ancdd44
 * Is password valid? true
 * 50
 * 82
 * 39
 * 99
 * 13
 * 64
 * 74
 * 52
 * 36
 * 15
 *
 *
 * Please enter a password that must include:
 * Must be at least 4 characters in length
 * Include at least one uppercase character
 * Include at least one digit
 * Acndcss
 * Invalid password
 */
